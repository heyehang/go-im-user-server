// Code generated by goctl. DO NOT EDIT!
// Source: user_server.proto

package server

import (
	"context"

	"github.com/heyehang/go-im-grpc/user_server"
	"go-im-user-server/internal/logic"
	"go-im-user-server/internal/svc"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user_server.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GetUsers(ctx context.Context, in *user_server.GetUsersReq) (*user_server.GetUsersReply, error) {
	l := logic.NewGetUsersLogic(ctx, s.svcCtx)
	return l.GetUsers(in)
}

func (s *UserServer) GetUsersByTokens(ctx context.Context, in *user_server.GetUsersByTokensReq) (*user_server.GetUsersByTokensReply, error) {
	l := logic.NewGetUsersByTokensLogic(ctx, s.svcCtx)
	return l.GetUsersByTokens(in)
}

func (s *UserServer) CreateUser(ctx context.Context, in *user_server.CreateUserReq) (*user_server.CreateUserReply, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) Login(ctx context.Context, in *user_server.LoginReq) (*user_server.LoginReply, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) AuthUser(ctx context.Context, in *user_server.AuthUserReq) (*user_server.AuthUserReply, error) {
	l := logic.NewAuthUserLogic(ctx, s.svcCtx)
	return l.AuthUser(in)
}

func (s *UserServer) GetDeviceTokensByUserID(ctx context.Context, in *user_server.GetDeviceTokensByUserIDReq) (*user_server.GetDeviceTokensByUserIDReply, error) {
	l := logic.NewGetDeviceTokensByUserIDLogic(ctx, s.svcCtx)
	return l.GetDeviceTokensByUserID(in)
}
